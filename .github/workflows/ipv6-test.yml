name: Rust

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

env:
  CARGO_TERM_COLOR: always
  IS_BEHIND_NAT: true
  RUST_LOG: debug
  IPGEOLOCATIONIO_API_KEY: ${{ secrets.IPGEOLOCATIONIO_API_KEY }}
  WG_IFACE_PRIVATE_KEY: ${{ secrets.WG_IFACE_PRIVATE_KEY }}
  WG_IFACE_ADDRESS: ${{ secrets.WG_IFACE_ADDRESS }}
  WG_PEER_PUBLIC_KEY: ${{ secrets.WG_PEER_PUBLIC_KEY }}
  WG_PEER_ENDPOINT: ${{ secrets.WG_PEER_ENDPOINT }}
  WG_PEER_ALLOWED_IPS: ${{ secrets.WG_PEER_ALLOWED_IPS }}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Set up dependencies
      run: sudo apt-get update && sudo apt-get install resolvconf wireguard wireguard-tools
    - name: Build executable
      run: cargo build
    - name: Set up WireGuard
      run: |
        echo "[Interface]" >> ~/wg0.conf
        echo "PrivateKey = $WG_IFACE_PRIVATE_KEY" >> ~/wg0.conf
        echo "Address = $WG_IFACE_ADDRESS" >> ~/wg0.conf
        echo "DNS = 1.1.1.1" >> ~/wg0.conf
        echo "[Peer]" >> ~/wg0.conf
        echo "PublicKey = $WG_PEER_PUBLIC_KEY" >> ~/wg0.conf
        echo "Endpoint = $WG_PEER_ENDPOINT" >> ~/wg0.conf
        echo "AllowedIPs = $WG_PEER_ALLOWED_IPS" >> ~/wg0.conf
        sudo wg-quick up ~/wg0.conf
    - name: Ensure IPv4 and IPv6 connectivity
      run: curl google.com && curl -6 google.com
    - name: Run executable
      run: cargo run
